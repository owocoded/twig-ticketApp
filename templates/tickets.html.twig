{% extends 'base.html.twig' %}

{% block title %}Tickets - Ticket App{% endblock %}

{% block body %}
<nav class="nav navbar navbar-expand-md">
    <div class="container">
        <a href="/" class="nav-brand">TicketApp</a>
        <button class="navbar-toggler" type="button" onclick="toggleMobileMenu()">
            <span>â˜°</span>
        </button>
        <div class="nav-links">
            <a href="/dashboard" class="nav-link">Dashboard</a>
            <a href="/tickets" class="nav-link">Tickets</a>
            <button id="logoutBtn" class="btn btn-outline-primary">Logout</button>
        </div>
    </div>
</nav>

<div class="container mt-8">
    <div class="flex justify-between items-center mb-8">
        <h1 class="text-3xl font-bold">Ticket Management</h1>
        <button id="createTicketBtn" class="btn btn-primary">Create Ticket</button>
    </div>
    
    <!-- Create/Edit Ticket Modal -->
    <div id="ticketModal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center hidden z-50" style="display: none;">
        <div class="bg-white rounded-lg shadow-lg w-full max-w-md p-6">
            <h2 id="modalTitle" class="text-xl font-bold mb-4">Create Ticket</h2>
            <form id="ticketForm">
                <input type="hidden" id="ticketId">
                
                <div class="form-group">
                    <label for="ticketTitle" class="form-label">Title *</label>
                    <input type="text" id="ticketTitle" name="title" class="form-input" required>
                    <div id="title-error" class="form-error"></div>
                </div>
                
                <div class="form-group">
                    <label for="ticketDescription" class="form-label">Description</label>
                    <textarea id="ticketDescription" name="description" class="form-input" rows="4"></textarea>
                </div>
                
                <div class="form-group">
                    <label for="ticketStatus" class="form-label">Status *</label>
                    <select id="ticketStatus" name="status" class="form-input" required>
                        <option value="">Select Status</option>
                        <option value="open">Open</option>
                        <option value="in_progress">In Progress</option>
                        <option value="closed">Closed</option>
                    </select>
                    <div id="status-error" class="form-error"></div>
                </div>
                
                <div class="form-group">
                    <label for="ticketPriority" class="form-label">Priority</label>
                    <select id="ticketPriority" name="priority" class="form-input">
                        <option value="low">Low</option>
                        <option value="medium" selected>Medium</option>
                        <option value="high">High</option>
                    </select>
                </div>
                
                <div class="flex gap-2 mt-6">
                    <button type="submit" class="btn btn-primary flex-1">Save</button>
                    <button type="button" id="cancelBtn" class="btn btn-secondary flex-1">Cancel</button>
                </div>
            </form>
        </div>
    </div>
    
    <!-- Confirmation Modal -->
    <div id="confirmModal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center hidden z-50" style="display: none;">
        <div class="bg-white rounded-lg shadow-lg w-full max-w-md p-6">
            <h2 class="text-xl font-bold mb-4">Confirm Deletion</h2>
            <p>Are you sure you want to delete this ticket? This action cannot be undone.</p>
            <div class="flex gap-2 mt-6">
                <button id="confirmDeleteBtn" class="btn btn-danger flex-1">Delete</button>
                <button id="cancelDeleteBtn" class="btn btn-secondary flex-1">Cancel</button>
            </div>
        </div>
    </div>
    
    <!-- Tickets List -->
    <div id="ticketsList">
        <!-- Tickets will be loaded here dynamically -->
    </div>
</div>

<script>
let currentTickets = [];
let ticketToDelete = null;

// Load tickets from localStorage
function loadTickets() {
    currentTickets = JSON.parse(localStorage.getItem('ticketapp_tickets')) || [];
    renderTickets();
}

// Render tickets list
function renderTickets() {
    const ticketsList = document.getElementById('ticketsList');
    
    if (currentTickets.length === 0) {
        ticketsList.innerHTML = '<div class="card text-center"><p>No tickets found. Create your first ticket!</p></div>';
        return;
    }
    
    ticketsList.innerHTML = currentTickets.map(ticket => `
        <div class="card mb-4">
            <div class="flex justify-between items-start">
                <div class="flex-1">
                    <h3 class="text-lg font-semibold">${ticket.title}</h3>
                    <p class="text-gray-600 mt-1">${ticket.description || 'No description provided'}</p>
                    <div class="flex items-center gap-4 mt-3">
                        <span class="status ${ticket.status}">
                            ${ticket.status.replace('_', ' ')}
                        </span>
                        <span class="text-sm text-gray-500 priority-${ticket.priority}">Priority: ${ticket.priority}</span>
                        <span class="text-sm text-gray-500">Created: ${new Date(ticket.created_at).toLocaleDateString()}</span>
                    </div>
                </div>
                <div class="flex gap-2">
                    <button onclick="editTicket(${ticket.id})" class="btn btn-secondary">Edit</button>
                    <button onclick="deleteTicket(${ticket.id})" class="btn btn-danger">Delete</button>
                </div>
            </div>
        </div>
    `).join('');
}

// Show create ticket modal
document.getElementById('createTicketBtn').addEventListener('click', function() {
    document.getElementById('modalTitle').textContent = 'Create Ticket';
    document.getElementById('ticketForm').reset();
    document.getElementById('ticketId').value = '';
    document.getElementById('title-error').textContent = '';
    document.getElementById('status-error').textContent = '';
    document.getElementById('ticketModal').style.display = 'block';
});

// Close modal
document.getElementById('cancelBtn').addEventListener('click', function() {
    document.getElementById('ticketModal').style.display = 'none';
});

// Handle form submission
document.getElementById('ticketForm').addEventListener('submit', function(e) {
    e.preventDefault();
    
    // Clear previous errors
    document.getElementById('title-error').textContent = '';
    document.getElementById('status-error').textContent = '';
    
    const id = document.getElementById('ticketId').value;
    const title = document.getElementById('ticketTitle').value;
    const description = document.getElementById('ticketDescription').value;
    const status = document.getElementById('ticketStatus').value;
    const priority = document.getElementById('ticketPriority').value;
    
    // Validation
    let isValid = true;
    
    if (!title) {
        document.getElementById('title-error').textContent = 'Title is required';
        isValid = false;
    }
    
    if (!status) {
        document.getElementById('status-error').textContent = 'Status is required';
        isValid = false;
    }
    
    // Validate status values
    const validStatuses = ['open', 'in_progress', 'closed'];
    if (status && !validStatuses.includes(status)) {
        document.getElementById('status-error').textContent = 'Status must be open, in_progress, or closed';
        isValid = false;
    }
    
    if (!isValid) return;
    
    if (id) {
        // Update existing ticket
        const index = currentTickets.findIndex(ticket => ticket.id == id);
        if (index !== -1) {
            currentTickets[index] = {
                ...currentTickets[index],
                title,
                description,
                status,
                priority,
                updated_at: new Date().toISOString()
            };
        }
    } else {
        // Create new ticket
        const newTicket = {
            id: Date.now(),
            title,
            description,
            status,
            priority,
            created_at: new Date().toISOString(),
            updated_at: new Date().toISOString()
        };
        currentTickets.unshift(newTicket);
    }
    
    // Save to localStorage
    localStorage.setItem('ticketapp_tickets', JSON.stringify(currentTickets));
    
    // Close modal and refresh list
    document.getElementById('ticketModal').style.display = 'none';
    loadTickets();
    
    showToast(id ? 'Ticket updated successfully!' : 'Ticket created successfully!', 'success');
});

// Edit ticket
function editTicket(id) {
    const ticket = currentTickets.find(t => t.id == id);
    if (!ticket) return;
    
    document.getElementById('modalTitle').textContent = 'Edit Ticket';
    document.getElementById('ticketId').value = ticket.id;
    document.getElementById('ticketTitle').value = ticket.title;
    document.getElementById('ticketDescription').value = ticket.description || '';
    document.getElementById('ticketStatus').value = ticket.status;
    document.getElementById('ticketPriority').value = ticket.priority || 'medium';
    
    document.getElementById('ticketModal').style.display = 'block';
}

// Delete ticket
function deleteTicket(id) {
    ticketToDelete = id;
    document.getElementById('confirmModal').style.display = 'block';
}

// Confirm delete
document.getElementById('confirmDeleteBtn').addEventListener('click', function() {
    if (ticketToDelete !== null) {
        currentTickets = currentTickets.filter(ticket => ticket.id != ticketToDelete);
        localStorage.setItem('ticketapp_tickets', JSON.stringify(currentTickets));
        
        loadTickets();
        document.getElementById('confirmModal').style.display = 'none';
        ticketToDelete = null;
        
        showToast('Ticket deleted successfully!', 'success');
    }
});

// Cancel delete
document.getElementById('cancelDeleteBtn').addEventListener('click', function() {
    document.getElementById('confirmModal').style.display = 'none';
    ticketToDelete = null;
});

// Logout function
document.getElementById('logoutBtn').addEventListener('click', function() {
    localStorage.removeItem('ticketapp_session');
    window.location.href = '/auth/login';
});

// Load tickets when page loads
document.addEventListener('DOMContentLoaded', function() {
    loadTickets();
});
</script>
{% endblock %}