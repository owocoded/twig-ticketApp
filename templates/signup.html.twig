{% extends 'base.html.twig' %}

{% block title %}Sign Up - Ticket App{% endblock %}

{% block body %}
<div class="container mt-16">
    <div class="max-w-md mx-auto">
        <div class="card">
            <h2 class="text-2xl font-bold mb-6 text-center">Create an Account</h2>
            
            <form id="signupForm">
                <div class="form-group">
                    <label for="name" class="form-label">Full Name</label>
                    <input type="text" id="name" name="name" class="form-input" required>
                    <div id="name-error" class="form-error"></div>
                </div>
                
                <div class="form-group">
                    <label for="email" class="form-label">Email Address</label>
                    <input type="email" id="email" name="email" class="form-input" required>
                    <div id="email-error" class="form-error"></div>
                </div>
                
                <div class="form-group">
                    <label for="password" class="form-label">Password</label>
                    <input type="password" id="password" name="password" class="form-input" required>
                    <div id="password-error" class="form-error"></div>
                </div>
                
                <div class="form-group">
                    <label for="confirmPassword" class="form-label">Confirm Password</label>
                    <input type="password" id="confirmPassword" name="confirmPassword" class="form-input" required>
                    <div id="confirmPassword-error" class="form-error"></div>
                </div>
                
                <button type="submit" class="btn btn-primary w-full">Sign Up</button>
            </form>
            
            <div class="mt-4 text-center">
                <p>Already have an account? <a href="/auth/login" class="btn btn-outline-primary">Login</a></p>
            </div>
        </div>
    </div>
</div>

<script>
document.getElementById('signupForm').addEventListener('submit', function(e) {
    e.preventDefault();
    
    // Clear previous errors
    document.getElementById('name-error').textContent = '';
    document.getElementById('email-error').textContent = '';
    document.getElementById('password-error').textContent = '';
    document.getElementById('confirmPassword-error').textContent = '';
    
    const name = document.getElementById('name').value;
    const email = document.getElementById('email').value;
    const password = document.getElementById('password').value;
    const confirmPassword = document.getElementById('confirmPassword').value;
    
    // Validation
    let isValid = true;
    
    if (!name) {
        document.getElementById('name-error').textContent = 'Name is required';
        isValid = false;
    }
    
    if (!email) {
        document.getElementById('email-error').textContent = 'Email is required';
        isValid = false;
    } else if (!/\S+@\S+\.\S+/.test(email)) {
        document.getElementById('email-error').textContent = 'Email is invalid';
        isValid = false;
    }
    
    if (!password) {
        document.getElementById('password-error').textContent = 'Password is required';
        isValid = false;
    } else if (password.length < 6) {
        document.getElementById('password-error').textContent = 'Password must be at least 6 characters';
        isValid = false;
    }
    
    if (password !== confirmPassword) {
        document.getElementById('confirmPassword-error').textContent = 'Passwords do not match';
        isValid = false;
    }
    
    if (!isValid) return;
    
    // Check if user already exists
    const storedUsers = JSON.parse(localStorage.getItem('ticketapp_users')) || [];
    const existingUser = storedUsers.find(u => u.email === email);
    
    if (existingUser) {
        showToast('User with this email already exists', 'error');
        return;
    }
    
    // Create new user
    const newUser = {
        id: Date.now(), // Simple ID generation
        name: name,
        email: email,
        password: password
    };
    
    storedUsers.push(newUser);
    localStorage.setItem('ticketapp_users', JSON.stringify(storedUsers));
    
    // Set session token
    localStorage.setItem('ticketapp_session', JSON.stringify({
        id: newUser.id,
        email: newUser.email,
        name: newUser.name
    }));
    
    showToast('Account created successfully!', 'success');
    setTimeout(() => {
        window.location.href = '/dashboard';
    }, 1000);
});
</script>
{% endblock %}